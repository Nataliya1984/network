{"version":3,"file":"static/js/459.055078b7.chunk.js","mappings":"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","sources":["webpack://social-network/./src/common/Paginator/Paginator.module.css?abf7","common/Paginator/Paginator.tsx","../javascript/esm|C:/it-camasutra_cursy/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../javascript/esm|C:/it-camasutra_cursy/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","Users/User.tsx","Users/Users.tsx","components/redux/users-selectors.ts","Users/UsersContainer.tsx","../node_modules/classnames/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__k82J5\",\"pageNumber\":\"Paginator_pageNumber__eovxN\",\"selectedPage\":\"Paginator_selectedPage__ut8Zx\"};","import React, {useState} from \"react\";\r\nimport classes from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\ntype PropsType = {\r\n    onPageChanges: (pageNumber: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n     portionSize: number\r\n}\r\n\r\nexport const Paginator = ({\r\n                              onPageChanges,\r\n                              currentPage,\r\n                              pageSize,\r\n                              totalUsersCount,\r\n                              portionSize=10\r\n                          }: PropsType) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n     let portionCount = Math.ceil(pagesCount / portionSize);\r\n     let [portionNumber, setPortionNumber] = useState(1);\r\n     let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n     let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n        <div className={classes.paginator}>\r\n            {\r\n                portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>PREV</button>\r\n            }\r\n\r\n            {pages\r\n               .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((el, index) => {\r\n                    return (\r\n                        <span className={ cn({\r\n                            [classes.selectedPage]: currentPage === el\r\n                        }, classes.pageNumber) }\r\n                              key={el}\r\n                              onClick={(e) => {\r\n                                  onPageChanges(el);\r\n                              }}>{el}</span>\r\n                    )\r\n                })}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../assets/imeges/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../components/redux/users-reducer\";\r\n\r\ntype UserPropsType = {\r\n    followingInProgress: Array<number>\r\n    followTC: (id: number) => any\r\n    unFollowTC: (id: number) => any\r\n    user: UserType\r\n}\r\n\r\nexport const User = ({followingInProgress, followTC, unFollowTC, user, ...props}: UserPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                             className={classes.usersPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      followTC(user.id)\r\n                                  }}>UnFollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unFollowTC(user.id)\r\n                                  }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"el.location.country\"}</div>\r\n                    <div>{\"el.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {MapStateUserToPropsType} from \"./UsersContainer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype PropsType = MapStateUserToPropsType & {\r\n    onPageChanges: (pageNumber: number) => void\r\n    followTC: (id: number) => any\r\n    unFollowTC: (id: number) => any\r\n}\r\n\r\nexport const Users = ({\r\n                          users,\r\n                          onPageChanges,\r\n                          currentPage,\r\n                          totalUsersCount,\r\n                          pageSize,\r\n                          followingInProgress,\r\n                          followTC,\r\n                          unFollowTC,\r\n                          portionSize\r\n                      }: PropsType) => {\r\n\r\n    // let pagesCount = Math.ceil(usersPage.totalUsersCount / usersPage.pageSize)\r\n    //\r\n    // let pages = []\r\n    //\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pages.push(i)\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Paginator onPageChanges={onPageChanges} pageSize={pageSize} currentPage={currentPage}\r\n                       totalUsersCount={totalUsersCount} portionSize={portionSize}/>\r\n            <div>\r\n                {\r\n                    users.map(el => {\r\n                        return (\r\n                            <User key={el.id} followingInProgress={followingInProgress} followTC={followTC}\r\n                                  unFollowTC={unFollowTC} user={el}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}","// 80(2) нам нужны сюда все юзеры\r\n// ............. pageSize\r\n// ............. totalUsersCount и т.д\r\n// селектор - это функция, которая принимает стейт (весь стейт целиком), достает из него, то что нужно и возвращает в бизнес\r\n\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\n\r\nexport const getUsers= (state: AppStateType)=>{\r\nreturn state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType)=>{\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state: AppStateType)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\n//запрашиваем текущую страницу\r\nexport const getCurrentPage = (state: AppStateType)=>{\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType)=>{\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getPortionSize = (state:AppStateType) => {\r\n  return state.usersPage.portionSize\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followTC, getUsersTC,\r\n    setCurrentPage,\r\n    unFollowTC, UserType,\r\n} from \"../components/redux/users-reducer\";\r\nimport {AppStateType} from \"../components/redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getPortionSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../components/redux/users-selectors\";\r\n\r\n\r\nexport type MapStateUserToPropsType = {\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    users: Array<UserType>\r\n    portionSize:number\r\n}\r\n\r\nexport type MapDispatchPropsType = {\r\n    setCurrentPage: (pageNumber: number) => void\r\n    getUsersTC: (currentPage: number, pageSize: number) => any\r\n    followTC: (id: number) => any\r\n    unFollowTC: (id: number) => any\r\n}\r\n\r\nexport type UsersPropsType = MapStateUserToPropsType\r\n    & MapDispatchPropsType & {\r\n    onPageChanges: (pageNumber: number) => void\r\n}\r\n\r\n\r\nexport class UsersContainer extends React.Component<MapStateUserToPropsType & MapDispatchPropsType> {\r\n\r\n    componentDidMount() {\r\n        //делаем деструктуризацию и достаем из объекта данные\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsersTC(currentPage, pageSize)\r\n\r\n        // this.props.toggleIsFetching(true)\r\n        //     usersApi.getUsers(this.props.currentPage, this.props.pageSize)\r\n        //     .then((data) => {\r\n        //         // debugger\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.setTotalUsersCount(data.totalCount)\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n    }\r\n\r\n    onPageChanges = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersTC(pageNumber, pageSize)\r\n\r\n        // this.props.toggleIsFetching(true)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // usersApi.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then((data) => {\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.toggleIsFetching(false)\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                // usersPage={this.props.usersPage}\r\n                   onPageChanges={this.onPageChanges.bind(this)}\r\n                   isFetching={this.props.isFetching}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   followTC={this.props.followTC}\r\n                   unFollowTC={this.props.unFollowTC}\r\n                   users={this.props.users}\r\n                   portionSize={this.props.portionSize}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n// 81(1) рефакторим мапстейттопропс, создаем для селекторов файл в редьюсерах users-selectors.ts\r\n\r\n// export let mapStateToProps = (state: AppStateType): MapStateUserToPropsType => {\r\n//     return {\r\n//         usersPage: state.usersPage,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress,\r\n//\r\n//     }\r\n// }\r\n\r\nexport let mapStateToProps = (state: AppStateType): MapStateUserToPropsType => {\r\n    return {\r\n        // 80(3) заменяем значения селекторами\r\n        // usersPage: getUsers(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        portionSize:getPortionSize(state)\r\n\r\n    }\r\n}\r\n\r\n//let withRedirect = withAuthRedirect(UsersContainer)\r\n\r\n\r\n// export default withAuthRedirect (connect(mapStateToProps, {\r\n//     setCurrentPage,\r\n//     getUsersTC,\r\n//     followTC,\r\n//     unFollowTC\r\n// })(UsersContainer))\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {setCurrentPage, getUsersTC, followTC, unFollowTC})\r\n)\r\n(UsersContainer)","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["Paginator","onPageChanges","currentPage","pageSize","totalUsersCount","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","classes","onClick","filter","p","map","el","index","cn","e","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","User","followingInProgress","followTC","unFollowTC","user","to","id","src","photos","small","userPhoto","followed","disabled","some","name","status","Users","users","getUsers","state","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getPortionSize","UsersContainer","pageNumber","props","getUsersTC","this","Preloader","bind","React","mapStateToProps","compose","connect","setCurrentPage","hasOwn","hasOwnProperty","classNames","arguments","arg","argType","Array","isArray","inner","apply","toString","includes","join","module","exports","default"],"sourceRoot":""}